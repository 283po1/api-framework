

spring:
  graphql:
    graphiql:
      enabled: true
      # graphiql을 true를 설정해 주면 localhost:8080/h2-console과 같이 localhost:8080/graphiql 통해
      # graphql 쿼리를 테스트가 가능합니다.
    schema:
      locations: classpath:graphql/**/
      file-extensions: .graphqls, .gqls
  devtools:
    livereload:
      enabled: true


---
#develop mode
spring:
  config:
    activate:
      on-profile: develop
  datasource:
    url: jdbc:mysql://localhost:3306/framework?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: root
    password: root
    driverClassName: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    show-sql: false
    properties.hibernate.format_sql: true
    open-in-view: false
    #data-sql 실행시키기 위해 true / spring boot 2.5.0 이후부
    defer-datasource-initialization: true
  sql:
    init:
      schema-locations: classpath:sql/schema.sql
      data-locations: classpath:sql/data.sql
      mode: always


logging:
  level:
    root: ERROR
    p6spy: info
    org.springframework.security: DEBUG
    org.springframework.web.client: DEBUG
    org.hibernate.SQL : ERROR
  pattern:
    console: "[%highlight(%-5level) %d{yyyy-MM-dd HH:mm:ss} ] %msg | %X{userId} |%X{errCode}%n"



---
#test mode
spring:
  config:
    activate:
      on-profile: test

logging:
  level: error

decorator:
  datasource:
    p6spy:
      enable-logging: false

---
#product mode
spring:
  config:
    activate:
      on-profile: test

logging:
  level: error


decorator:
  datasource:
    p6spy:
      enable-logging: false
